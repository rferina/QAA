Rachel Ferina

python version: 3.10
environment: QAA

4 August 2022

My assignments are listed in /projects/bgmp/shared/Bi622/QAA_data_assignments.txt:
Rachel  23_4A_control_S17_L008  22_3H_both_S16_L008

The demultiplexed, gzipped .fastq files are here: /projects/bgmp/shared/2017_sequencing/demultiplexed/
22_3H_both_S16_L008_R1_001.fastq.gz
22_3H_both_S16_L008_R2_001.fastq.gz
23_4A_control_S17_L008_R1_001.fastq.gz
23_4A_control_S17_L008_R2_001.fastq.gz


My repository is located at  /projects/bgmp/rferina/bioinfo/Bi622/QAA

module load fastqc/0.11.5

fastqc -t 4

Fastqc runtime for 3 files:
Command being timed: "fastqc -t 4 /projects/bgmp/shared/2017_sequencing/demultiplexed/23_4A_control_S17_L008_R1_001.fastq.gz /projects/bgmp/shared/2017_sequencing/demultiplexed/23_4A_control_S18_L008_R2_001.fastq.gz /projects/bgmp/shared/2017_sequencing/demultiplexed/22_3H_both_S16_L008_R1_001.fastq.gz /projects/bgmp/shared/2017_sequencing/demultiplexed/22_3H_both_S16_L008_R2_001.fastq.gz -o /projects/bgmp/rferina/bioinfo/Bi622/QAA/fastqc_outputs"
	Elapsed (wall clock) time (h:mm:ss or m:ss): 4:59.19

Fastqc runtime for 1 file:
Command being timed: "fastqc /projects/bgmp/shared/2017_sequencing/demultiplexed/23_4A_control_S17_L008_R2_001.fastq.gz -o /projects/bgmp/rferina/bioinfo/Bi622/QAA/fastqc_outputs"
	Elapsed (wall clock) time (h:mm:ss or m:ss): 4:16.21

to see results of fastqc:
 unzip 22_3H_both_S16_L008_R2_001_fastqc.zip 

My demux script runtimes:
22 read 1:
Command being timed: "./demux_qs_processing.py -r 101 -f /projects/bgmp/shared/2017_sequencing/demultiplexed/22_3H_both_S16_L008_R1_001.fastq.gz -g 22_3H_L008_R1_001_dist.png"
	Elapsed (wall clock) time (h:mm:ss or m:ss): 1:10.56

22 read 2:
Command being timed: "./demux_qs_processing.py -r 101 -f /projects/bgmp/shared/2017_sequencing/demultiplexed/22_3H_both_S16_L008_R2_001.fastq.gz -g 22_3H_L008_R2_001_dist.png"
	Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.84

23 read 1:
Command being timed: "./demux_qs_processing.py -r 101 -f /projects/bgmp/shared/2017_sequencing/demultiplexed/23_4A_control_S17_L008_R1_001.fastq.gz -g 23_4A_L008_R1_001_dist.png"
	Elapsed (wall clock) time (h:mm:ss or m:ss): 12:59.02

23 read 2:
Command being timed: "./demux_qs_processing.py -r 101 -f /projects/bgmp/shared/2017_sequencing/demultiplexed/23_4A_control_S17_L008_R2_001.fastq.gz -g 23_4A_L008_R2_001_dist.png"
	Elapsed (wall clock) time (h:mm:ss or m:ss): 12:49.50

Time difference between 22 and 23 makes sense, as the 23 files are larger
wc -l 22_3H_both_S16_L008_R1_001.fastq.gz
954639 22_3H_both_S16_L008_R1_001.fastq.gz

wc -l 23_4A_control_S17_L008_R1_001.fastq.gz
10058232 23_4A_control_S17_L008_R1_001.fastq.gz

18 August 2022

Created QAA environment.
conda create --name QAA python=3.10
conda activate QAA

Installed all the programs needed for subsequent parts into QAA environment, checked that the versions were correct.
conda install cutadapt
cutadapt --version
4.1

conda install trimmomatic
trimmomatic -version
0.39

conda install star
conda install numpy
conda install pysam
conda install matplotlib
conda install htseq

htseq: module load easybuild 
 You will need to load all module(s) on any one of the lines below before the "HTSeq/0.9.1-Python-3.6.1" module is available to load.

      easybuild  icc/2017.1.132-GCC-6.3.0-2.27  impi/2017.1.132
      easybuild  ifort/2017.1.132-GCC-6.3.0-2.27  impi/2017.1.132
      eb-hide/1  icc/2017.1.132-GCC-6.3.0-2.27  impi/2017.1.132
      eb-hide/1  ifort/2017.1.132-GCC-6.3.0-2.27  impi/2017.1.132


31 August 2022


RNA seq data should have duplicated seq in data bc different expression Levels
Overrepresented seq could be adapters.
223H R1 and R2:
>>Overrepresented sequences	pass
>>END_MODULE

234A R1
>>Overrepresented sequences	warn
#Sequence	Count	Percentage	Possible Source
CTTTTACTTCCTCTAGATAGTCAAGTTCGACCGTCTTCTCAGCGCTCCGC	58423	0.1318706509692221	No Hit
ACGACTTTTACTTCCTCTAGATAGTCAAGTTCGACCGTCTTCTCAGCGCT	47785	0.10785887504175201	No Hit

234A R2
>>Overrepresented sequences	warn
#Sequence	Count	Percentage	Possible Source
CCTGCCAGTAGCATATGCTTGTCTCAAAGATTAAGCCATGCATGTCTAAG	123071	0.27779218604715833	No Hit
CCTCACCCGGCCCGGACACGGACAGGATTGACAGATTGATAGCTCTTTCT	110993	0.25053008512104596	No Hit
CTGCCAGTAGCATATGCTTGTCTCAAAGATTAAGCCATGCATGTCTAAGT	51625	0.11652640837146483	No Hit
GGAGTCTAACGCGTGCGCGAGTCAGGGGCTCGTCCGAAAGCCGCCGTGGC	48033	0.10841865323596263	No Hit
CTCACCCGGCCCGGACACGGACAGGATTGACAGATTGATAGCTCTTTCTC	47887	0.1080891063958225	No Hit


confirmed adapters by grepping for the seq in the original files. Had to use zgrep to grep in zipped files.

**22 R1:**
Read 1 adapter:
 zgrep -c "AGATCGGAAGAGCACACGTCTGAACTCCAGTCA" 22_3H_both_S16_L008_R1_001.fastq.gz
7563
Read 2 adapter:
 zgrep -c "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT" 22_3H_both_S16_L008_R1_001.fastq.gz
0
wc -l 22_3H_both_S16_L008_R1_001.fastq.gz
954639 22_3H_both_S16_L008_R1_001.fastq.gz

**22 R2:**
Read 1:
zgrep -c "AGATCGGAAGAGCACACGTCTGAACTCCAGTCA" 22_3H_both_S16_L008_R2_001.fastq.gz
0
Read 2:
zgrep -c "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT" 22_3H_both_S16_L008_R2_001.fastq.gz
7848
1086026 22_3H_both_S16_L008_R2_001.fastq.gz

**23 R1:**
Read 1:
zgrep -c "AGATCGGAAGAGCACACGTCTGAACTCCAGTCA" 23_4A_control_S17_L008_R1_001.fastq.gz
43466
Read 2:
zgrep -c "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT" 23_4A_control_S17_L008_R1_001.fastq.gz
0
10058232 23_4A_control_S17_L008_R1_001.fastq.gz

**23 R2**
Read 1:
zgrep -c "AGATCGGAAGAGCACACGTCTGAACTCCAGTCA" 23_4A_control_S17_L008_R2_001.fastq.gz
0
Read 2:
zgrep -c "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT" 23_4A_control_S17_L008_R2_001.fastq.gz
46541
wc -l 23_4A_control_S17_L008_R2_001.fastq.gz
10526263 23_4A_control_S17_L008_R2_001.fastq.gz


5 Sept 2022

Ran cutadapt

ran trimmomatic, had to specify directories

accidentally wrote to paired file twice, had to rerun

6 Sept 2022

Ensembl.org → Downloads → FTP Downloads → Mouse → copied link address for DNA FASTA primary assembly and for GTF. Both are release 107.

Made dre directory for data, added the data on talapas /projects/bgmp/rferina/bioinfo/Bi622/QAA/dre.

wget http://ftp.ensembl.org/pub/release-107/fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz
wget http://ftp.ensembl.org/pub/release-107/gtf/mus_musculus/Mus_musculus.GRCm39.107.gtf.gz

Made directory for STAR database: Mus_musculus.GRCm39.ens107.STAR2.7.10a

Tried to make database, forgot the input files have to be unzipped:
EXITING because of INPUT ERROR: the file format of the genomeFastaFile: /projects/bgmp/rferina/bioinfo/Bi622/QAA/dre/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz is not fasta: the first character is '' (31), not '>'.
 Solution: check formatting of the fasta file. Make sure the file is uncompressed (unzipped).

Unzipped them with gunzip and reran, made the database.

Aligned the paired read trimmomatic outputs to the mouse database.

!!!!! WARNING:  Could not ls 2_r1

EXITING: because of fatal INPUT file error: could not open read file: 2_r1
SOLUTION: check that this file exists and has read permision.

changed from 22_r1 to r1_22 for variable name and it worked!

Ran parse_sam.py to count the number of mapped and unmapped reads.

Tried to load htseq to see the documentation with -h; learned I had to specify htseq-count -h to see it. 

7 September 2022

Worked on distribution graphs, learned it doesn't like variables starting with numbers:
SyntaxError: invalid decimal literal

Had to use gzip.open to avoid this error:
UnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte

Had to decode lines by opening in 'rt' because of gzip.open
TypeError: a bytes-like object is required, not 'str'

Running htseq:
Format not recognized for output count file: txt
  [Exception type: ValueError, raised in utils.py:371]
Command exited with non-zero status 1
Had to change to tsv output file and it worked.

Htseq-count:
version 2.0.2.


wouldn't allow formatting or captioning for FastQc plots, had to change to knitr::include_graphics.
![22r1_quality](22r1_per_base_quality.png)

looked at cutadapt output file to see trimmed results.

Notes from Leslie's mini lecture on strandedness:
normally only get
5'   geneA------geneC- 3' (+ strand)
3' -----geneB---geneD-5' (- strand)

genome FASTA and GTF file tells u which strand

convention only draw 5'

can't mix and match FASTA, has to match it
+ or - can change, so u must know and use correspodning GTF file

if unstranded prep and read alinged to Gene A and Gene B and in middle of C and D don;t know
if stranded, know gene C or D; if aligned to intron = unidentified gene or random transcription firing

was lib stranded or not?
we used htseq count to count which reads aligned to which features
-stranded as no, yes, reverse
(stranded no = same or opp strand of feature 50/50, on either strand if align with Gene A) (don't know what strand came from, have to count both as gene A)
(stranded yes = 1st read on same strand 2nd read on opp strand geneA
                                                                →  
                                                                       ←)
(stranded reverse = 1st on opp, 2nd on same as gene) geneA 
                                                        ←
                                                             
                                                     →        
                                                     
percetnages diff for rev and yes; 5% ; = not counting same genes every time; percent should be closer if the same

much higher count/perc diff = stranded
not stranded = same percentages for yes and reverse bc doesnt matter which, 50/50

if no they both count??


Worked on pdf report.

Tried to add legend to graphs but it wouldn't clear, even with
plt.clf()
plt.cla()
plt.close()

Had to put distribution graphs in separate scripts, ran out of time for argparse.

